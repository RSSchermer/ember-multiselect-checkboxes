"use strict";define("multiselect-checkboxes-demo-app/app",["exports","ember","multiselect-checkboxes-demo-app/resolver","ember-load-initializers","multiselect-checkboxes-demo-app/config/environment"],function(e,t,l,n,o){var s=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,s=t.default.Application.extend({modulePrefix:o.default.modulePrefix,podModulePrefix:o.default.podModulePrefix,Resolver:l.default}),(0,n.default)(s,o.default.modulePrefix),e.default=s}),define("multiselect-checkboxes-demo-app/components/multiselect-checkboxes",["exports","ember-multiselect-checkboxes/components/multiselect-checkboxes"],function(e,t){e.default=t.default}),define("multiselect-checkboxes-demo-app/controllers/application",["exports","ember"],function(e,t){var l=t.default.Object.extend({name:null,gender:null});e.default=t.default.Controller.extend({fruits:["apple","banana","orange"],selectedFruits:t.default.A(),cars:[{make:"BMW",color:"black"},{make:"Ferari",color:"red"},{make:"Volvo",color:"blue"}],selectedCars:t.default.A(),persons:[l.create({name:"Lisa",gender:"Female"}),l.create({name:"Bob",gender:"Male"}),l.create({name:"John",gender:"Male"})],selectedPersons:t.default.A(),phones:["Apple","Samsung","Nokia"],selectedPhones:t.default.A(),actions:{selectAllPhones:function(){this.set("selectedPhones",this.get("phones").copy())},deselectAllPhones:function(){this.set("selectedPhones",[])}}})}),define("multiselect-checkboxes-demo-app/helpers/app-version",["exports","ember","multiselect-checkboxes-demo-app/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,l,n){function o(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return t.hideSha?s.match(n.versionRegExp)[0]:t.hideVersion?s.match(n.shaRegExp)[0]:s}e.appVersion=o;var s=l.default.APP.version;e.default=t.default.Helper.helper(o)}),define("multiselect-checkboxes-demo-app/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){e.default=t.default}),define("multiselect-checkboxes-demo-app/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e.default=t.default}),define("multiselect-checkboxes-demo-app/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","multiselect-checkboxes-demo-app/config/environment"],function(e,t,l){var n=l.default.APP,o=n.name,s=n.version;e.default={name:"App Version",initialize:(0,t.default)(o,s)}}),define("multiselect-checkboxes-demo-app/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("multiselect-checkboxes-demo-app/initializers/data-adapter",["exports","ember"],function(e,t){e.default={name:"data-adapter",before:"store",initialize:function(){}}}),define("multiselect-checkboxes-demo-app/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,l){e.default={name:"ember-data",initialize:t.default}}),define("multiselect-checkboxes-demo-app/initializers/export-application-global",["exports","ember","multiselect-checkboxes-demo-app/config/environment"],function(e,t,l){function n(){var e=arguments[1]||arguments[0];if(l.default.exportApplicationGlobal!==!1){var n;if("undefined"!=typeof window)n=window;else if("undefined"!=typeof global)n=global;else{if("undefined"==typeof self)return;n=self}var o,s=l.default.exportApplicationGlobal;o="string"==typeof s?s:t.default.String.classify(l.default.modulePrefix),n[o]||(n[o]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[o]}}))}}e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("multiselect-checkboxes-demo-app/initializers/injectStore",["exports","ember"],function(e,t){e.default={name:"injectStore",before:"store",initialize:function(){}}}),define("multiselect-checkboxes-demo-app/initializers/store",["exports","ember"],function(e,t){e.default={name:"store",after:"ember-data",initialize:function(){}}}),define("multiselect-checkboxes-demo-app/initializers/transforms",["exports","ember"],function(e,t){e.default={name:"transforms",before:"store",initialize:function(){}}}),define("multiselect-checkboxes-demo-app/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e.default={name:"ember-data",initialize:t.default}}),define("multiselect-checkboxes-demo-app/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("multiselect-checkboxes-demo-app/router",["exports","ember","multiselect-checkboxes-demo-app/config/environment"],function(e,t,l){var n=t.default.Router.extend({location:l.default.locationType,rootURL:l.default.rootURL});n.map(function(){}),e.default=n}),define("multiselect-checkboxes-demo-app/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("multiselect-checkboxes-demo-app/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"S07zKQCW",block:'{"statements":[["open-element","article",[]],["static-attr","class","container"],["flush-element"],["text","\\n  "],["open-element","h1",[]],["static-attr","id","title"],["flush-element"],["text","Ember multiselect-checkboxes demo"],["close-element"],["text","\\n\\n  "],["open-element","p",[]],["flush-element"],["text","Documentation for this component is available\\n    "],["open-element","a",[]],["static-attr","href","https://github.com/rsschermer/ember-multiselect-checkboxes"],["flush-element"],["text","here"],["close-element"],["text",".\\n  "],["close-element"],["text","\\n\\n  "],["open-element","p",[]],["flush-element"],["text","The source for this demo is available\\n    "],["open-element","a",[]],["static-attr","href","https://github.com/rsschermer/ember-multiselect-checkboxes/tree/gh-pages/demo-app"],["flush-element"],["text","here"],["close-element"],["text",".\\n  "],["close-element"],["text","\\n\\n  "],["open-element","section",[]],["flush-element"],["text","\\n    "],["open-element","h2",[]],["flush-element"],["text","Array of primitives"],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","This example uses a plain javascript array as the selection options, with no label property specified:"],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["append",["helper",["multiselect-checkboxes"],null,[["options","selection"],[["get",["fruits"]],["get",["selectedFruits"]]]]],false],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","Selected fruits:\\n      "],["open-element","ul",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["selectedFruits"]]],null,3],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","section",[]],["flush-element"],["text","\\n    "],["open-element","h2",[]],["flush-element"],["text","Array of plain js objects"],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","This example uses an array of plain javascript objects as the selection options, with \'make\' specified as the\\n      label property:\\n    "],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["append",["helper",["multiselect-checkboxes"],null,[["options","selection","labelProperty"],[["get",["cars"]],["get",["selectedCars"]],"make"]]],false],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","Selected cars:\\n      "],["open-element","ul",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["selectedCars"]]],null,2],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","section",[]],["flush-element"],["text","\\n    "],["open-element","h2",[]],["flush-element"],["text","Array of Ember objects"],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","This example uses an array of ember objects as the selection options, with \'name\' specified as the\\n      label property:\\n    "],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["append",["helper",["multiselect-checkboxes"],null,[["options","selection","labelProperty"],[["get",["persons"]],["get",["selectedPersons"]],"name"]]],false],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","Selected persons:\\n      "],["open-element","ul",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["selectedPersons"]]],null,1],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n  "],["open-element","section",[]],["flush-element"],["text","\\n    "],["open-element","h2",[]],["flush-element"],["text","Select/Unselect all"],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","This example uses a plain javascript array as the selection options, \\"Select all/Unselect all feature\\":\\n    "],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["append",["helper",["multiselect-checkboxes"],null,[["options","selection"],[["get",["phones"]],["get",["selectedPhones"]]]]],false],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","\\n      "],["open-element","button",[]],["modifier",["action"],[["get",[null]],"selectAllPhones"]],["flush-element"],["text","Select all"],["close-element"],["text","\\n      "],["open-element","button",[]],["modifier",["action"],[["get",[null]],"deselectAllPhones"]],["flush-element"],["text","Deselect all"],["close-element"],["text","\\n    "],["close-element"],["text","\\n\\n    "],["open-element","p",[]],["flush-element"],["text","Selected phones:\\n      "],["open-element","ul",[]],["flush-element"],["text","\\n"],["block",["each"],[["get",["selectedPhones"]]],null,0],["text","      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n  "],["close-element"],["text","\\n\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","li",[]],["flush-element"],["append",["get",["phone"]],false],["close-element"],["text","\\n"]],"locals":["phone"]},{"statements":[["text","          "],["open-element","li",[]],["flush-element"],["text","name: "],["append",["unknown",["person","name"]],false],["text",", gender: "],["append",["unknown",["person","gender"]],false],["close-element"],["text","\\n"]],"locals":["person"]},{"statements":[["text","          "],["open-element","li",[]],["flush-element"],["text","make: "],["append",["unknown",["car","make"]],false],["text",", color: "],["append",["unknown",["car","color"]],false],["close-element"],["text","\\n"]],"locals":["car"]},{"statements":[["text","          "],["open-element","li",[]],["flush-element"],["append",["get",["fruit"]],false],["close-element"],["text","\\n"]],"locals":["fruit"]}],"hasPartials":false}',meta:{moduleName:"multiselect-checkboxes-demo-app/templates/application.hbs"}})}),define("multiselect-checkboxes-demo-app/templates/components/multiselect-checkboxes",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"oG/TLIgd",block:'{"statements":[["block",["each"],[["get",["checkboxes"]]],null,2]],"locals":[],"named":[],"yields":["default"],"blocks":[{"statements":[["text","    "],["open-element","li",[]],["flush-element"],["text","\\n      "],["open-element","label",[]],["flush-element"],["text","\\n        "],["append",["helper",["input"],null,[["type","checked","disabled"],["checkbox",["get",["checkbox","isSelected"]],["get",["disabled"]]]]],false],["text","\\n        "],["append",["unknown",["checkbox","label"]],false],["text","\\n      "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","    "],["yield","default",[["get",["checkbox","option"]],["get",["checkbox","isSelected"]],["get",["index"]]]],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["has-block","default"]],null,1,0]],"locals":["checkbox","index"]}],"hasPartials":false}',meta:{moduleName:"multiselect-checkboxes-demo-app/templates/components/multiselect-checkboxes.hbs"}})}),define("multiselect-checkboxes-demo-app/config/environment",["ember"],function(e){try{var t="multiselect-checkboxes-demo-app/config/environment",l=document.querySelector('meta[name="'+t+'"]').getAttribute("content"),n=JSON.parse(unescape(l)),o={default:n};return Object.defineProperty(o,"__esModule",{value:!0}),o}catch(e){throw new Error('Could not read config from meta tag with name "'+t+'".')}}),runningTests||require("multiselect-checkboxes-demo-app/app").default.create({name:"multiselect-checkboxes-demo-app",version:"0.0.0+72f2cb15"});